// 사이드바 공통 스타일
export const sidebarStyles = {
  container: (isOpen, animationValues) => ({
    width: isOpen ? '240px' : '60px',
    height: '100vh', // 전체 높이 사용
    background: '#fff',
    borderRight: '1px solid #e5e7eb',
    boxShadow: '2px 0 8px rgba(0,0,0,0.06)',
    transition: `width ${animationValues.DURATION.SLOW} ${animationValues.EASE_OUT}`,
    display: 'flex',
    flexDirection: 'column',
    zIndex: 1000,
    overflow: 'hidden',
    position: 'fixed',
    top: 0, // 맨 위에서 시작
    left: 0,
  }),
  header: {
    height: '54px',
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'flex-start',
    gap: '12px',
    padding: '0 16px',
    borderBottom: '1px solid #e5e7eb',
    background: '#f8f9fc',
    overflow: 'hidden',
    flexShrink: 0,
  },
  toggleButton: (animationValues) => ({
    width: '32px',
    height: '32px',
    borderRadius: '6px',
    border: '1px solid #e3e6ef',
    background: '#fff',
    color: '#6C8EFF',
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'center',
    cursor: 'pointer',
    transition: `all ${animationValues.DURATION.FAST} ease`,
    outline: 'none',
  }),
  title: (isOpen, animationValues) => ({
    fontSize: '20px',
    fontWeight: '600',
    color: '#22336b',
    textAlign: 'left',
    opacity: isOpen ? 1 : 0,
    transform: isOpen ? 'translateX(0)' : 'translateX(-20px)',
    transition: `all ${animationValues.DURATION.NORMAL} ${animationValues.EASE_OUT}`,
    whiteSpace: 'nowrap',
    overflow: 'hidden',
    width: isOpen ? 'auto' : '0px',
    display: 'inline-block',
    minWidth: isOpen ? 'auto' : '0px',
  }),
  chapterList: {
    flex: 1,
    padding: '16px 0',
    overflowY: 'auto',
    overflowX: 'hidden',
  },
  chapterButton: (isSelected, isOpen, animationValues) => ({
    width: '100%',
    height: '48px',
    padding: '0 16px',
    border: 'none',
    background: isSelected ? '#EEF2FF' : 'transparent',
    color: isSelected ? '#22336b' : '#6C8EFF',
    fontSize: '14px',
    fontWeight: isSelected ? '600' : '500',
    textAlign: 'left',
    cursor: 'pointer',
    transition: `all ${animationValues.DURATION.NORMAL} ${animationValues.EASE_OUT}`,
    borderLeft: isSelected ? '4px solid #6C8EFF' : '4px solid transparent',
    transform: isSelected ? 'translateX(4px)' : 'translateX(0)',
    boxShadow: isSelected ? '0 2px 8px rgba(108, 142, 255, 0.15)' : 'none',
    display: 'flex',
    alignItems: 'center',
    justifyContent: isOpen ? 'flex-start' : 'center',
    position: 'relative',
    overflow: 'hidden',
  }),
  chapterNumber: (isSelected, animationValues) => ({
    width: '24px',
    height: '24px',
    borderRadius: '50%',
    background: isSelected ? '#6C8EFF' : '#e3e6ef',
    color: isSelected ? '#fff' : '#6C8EFF',
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'center',
    fontSize: '12px',
    fontWeight: '600',
    marginRight: '12px',
    transition: `all ${animationValues.DURATION.NORMAL} ease`,
    flexShrink: 0,
    minWidth: '24px',
    minHeight: '24px',
  }),
  chapterText: (isOpen, animationValues) => ({
    opacity: isOpen ? 1 : 0,
    transform: isOpen ? 'translateX(0)' : 'translateX(-10px)',
    transition: `all ${animationValues.DURATION.NORMAL} ${animationValues.EASE_OUT}`,
    whiteSpace: 'nowrap',
    overflow: 'hidden',
    width: isOpen ? 'auto' : '0px',
    display: 'inline-block',
    minWidth: isOpen ? 'auto' : '0px',
  }),
  chapterTitle: (isOpen, animationValues) => ({
    opacity: isOpen ? 1 : 0,
    transform: isOpen ? 'translateX(0)' : 'translateX(-10px)',
    transition: `all ${animationValues.DURATION.NORMAL} ${animationValues.EASE_OUT}`,
    whiteSpace: 'nowrap',
    overflow: 'hidden',
    width: isOpen ? 'auto' : '0px',
    display: 'inline-block',
    minWidth: isOpen ? 'auto' : '0px',
    fontSize: '12px',
    color: '#6c757d',
    marginTop: '2px',
  }),
  content: (isOpen, animationValues) => ({
    flex: 1,
    padding: isOpen ? '16px' : '8px',
    overflowY: 'auto',
    overflowX: 'hidden',
    transition: `padding ${animationValues.DURATION.NORMAL} ${animationValues.EASE_OUT}`,
  }),
  footer: {
    padding: '16px',
    borderTop: '1px solid #e5e7eb',
    background: '#f8f9fc',
    flexShrink: 0,
  },
  footerButton: {
    width: '100%',
    height: '40px',
    border: '1px solid #6C8EFF',
    borderRadius: '6px',
    background: '#fff',
    color: '#6C8EFF',
    fontSize: '14px',
    fontWeight: '500',
    cursor: 'pointer',
    transition: 'all 0.2s ease',
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'center',
    gap: '8px',
  },
  footerButtonHover: {
    background: '#6C8EFF',
    color: '#fff',
  },
};

// 상단바 공통 스타일
export const topBarStyles = {
  container: {
    width: '100%',
    background: '#fff',
    boxShadow: '0 1px 3px rgba(0,0,0,0.08), 0 1px 2px rgba(0,0,0,0.04)',
    zIndex: 10001,
    display: 'flex',
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'space-between',
    gap: 12,
    paddingLeft: 16,
    paddingRight: 16,
    height: 54,
    flexWrap: 'nowrap',
    overflow: 'visible',
  },
  leftSection: {
    display: 'flex',
    flexDirection: 'row',
    alignItems: 'center',
    gap: 12,
    flex: 1,
    minWidth: 0,
    overflow: 'visible',
    flexWrap: 'nowrap',
  },
  centerSection: {
    display: 'flex',
    flexDirection: 'column',
    alignItems: 'center',
    justifyContent: 'center',
    flex: 1,
    textAlign: 'center',
  },
  rightSection: {
    display: 'flex',
    flexDirection: 'row',
    alignItems: 'center',
    gap: 8,
    flexShrink: 0,
  },
  backButton: {
    height: 36,
    padding: '0 16px',
    borderRadius: 8,
    border: '1.5px solid #e3e6ef',
    background: '#fff',
    color: '#22336b',
    fontSize: 13,
    fontWeight: 600,
    cursor: 'pointer',
    transition: 'all 0.2s ease',
    outline: 'none',
    display: 'flex',
    alignItems: 'center',
    gap: 6,
    boxShadow: '0 2px 4px rgba(0,0,0,0.05)',
  },
  title: {
    fontSize: 16,
    fontWeight: 600,
    color: '#22336b',
    margin: 0,
  },
  subtitle: {
    fontSize: 12,
    color: '#6c757d',
    margin: 0,
    marginTop: 2,
  },
  closeButton: (animationValues) => ({
    height: 36,
    width: 36,
    borderRadius: 8,
    border: '1.5px solid #e3e6ef',
    background: '#fff',
    color: '#22336b',
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'center',
    cursor: 'pointer',
    transition: `all ${animationValues.DURATION.FAST} ease`,
    outline: 'none',
    fontSize: 14,
    boxShadow: '0 2px 4px rgba(0,0,0,0.05)',
  }),
};

// 로딩/에러 컨테이너 스타일
export const containerStyles = {
  loading: {
    width: '100%',
    height: '100%',
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'center',
    fontSize: 20,
    color: '#6C8EFF',
  },
  error: {
    width: '100%',
    height: '100%',
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'center',
    fontSize: 16,
    color: '#ef4444',
    textAlign: 'center',
    padding: '20px',
  },
  controlsContainer: {
    padding: '8px 16px',
    background: '#f8f9fc',
    borderBottom: '1px solid #e5e7eb',
  },
};

/**
 * 그래프 관련 공통 스타일
 */
export const graphStyles = {
  container: {
    width: '100%', 
    height: '100%', 
    position: 'relative' 
  },
  tooltipContainer: {
    position: 'absolute',
    top: 0,
    left: 0,
    width: '100%',
    height: '100%',
    pointerEvents: 'none',
    zIndex: 9999,
  },
  tooltipStyle: {
    pointerEvents: 'auto' 
  },
  graphArea: {
    position: 'relative', 
    width: '100%', 
    height: '100%' 
  },
  ripple: {
    width: 120,
    height: 120,
  },
  graphPageContainer: {
    width: '100%', 
    height: 'calc(100vh - 54px)', // 상단바 높이만큼 제외
    overflow: 'hidden', 
    position: 'relative', 
    backgroundColor: '#f8fafc' 
  },
  graphPageInner: {
    position: 'relative', 
    width: '100%', 
    height: '100%' 
  },
};

/**
 * GraphControls 컴포넌트 스타일
 */
export const graphControlsStyles = {
  input: {
    width: '180px',
    minWidth: '150px',
    maxWidth: '220px',
    border: '1px solid #e3e6ef',
    borderRadius: '6px',
    fontSize: '12px',
    color: '#42506b',
    background: '#f8f9fc',
    transition: 'all 0.2s',
    outline: 'none',
    height: '28px',
    padding: '0 8px',
  },
  button: {
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'center',
    gap: '8px',
    border: 'none',
    borderRadius: '6px',
    fontSize: '12px',
    fontWeight: '500',
    cursor: 'pointer',
    transition: 'all 0.2s',
    width: '80px',
    height: '28px',
    padding: '0 12px',
    flexShrink: 0,
  },
  searchButton: {
    background: '#6C8EFF',
    color: '#fff',
  },
  resetButton: {
    background: '#f8f9fc',
    color: '#6c757d',
    border: '1px solid #e3e6ef',
  },
  form: {
    display: 'flex',
    alignItems: 'center',
    gap: '8px',
    flexWrap: 'wrap',
  },
  dropdown: {
    position: 'absolute',
    top: '100%',
    left: '0',
    right: '0',
    background: '#fff',
    border: '1px solid #e3e6ef',
    borderRadius: '6px',
    boxShadow: '0 4px 12px rgba(0, 0, 0, 0.1)',
    zIndex: 9999,
    maxHeight: '300px',
    overflowY: 'auto',
    marginTop: '4px',
    minWidth: '200px',
    width: '100%',
    display: 'block',
  },
  suggestionItem: (isSelected) => ({
    padding: '12px 14px',
    cursor: 'pointer',
    borderBottom: '1px solid #f1f3f4',
    background: isSelected ? '#f8f9fc' : '#fff',
    transition: 'background 0.2s',
  }),
  noResults: {
    padding: '16px 14px',
    textAlign: 'center',
    color: '#6c757d',
    fontSize: '12px',
    fontStyle: 'italic'
  },
  header: {
    padding: '8px 14px', 
    fontSize: '11px', 
    color: '#6c757d', 
    background: '#f8f9fc',
    borderBottom: '1px solid #e3e6ef',
    fontWeight: '500'
  },
  container: {
    position: 'relative', 
    display: 'inline-block',
    width: 'auto',
    minWidth: '200px',
    zIndex: 99999
  }
};
